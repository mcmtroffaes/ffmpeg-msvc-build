version: 2.1
orbs:
  win: circleci/windows@2.2.0
jobs:
  build:
    executor:
      name: win/default
    environment:
      VCPKG_DISABLE_METRICS: 1
      TRIPLET: x64-windows
      FEATURES: core
      MSVC_RUNTIME_LIBRARY: MultiThreadedDLL
    steps:
      - run: choco install cmake -y -r --no-progress --installargs 'ADD_CMAKE_TO_PATH=System'
      - run: choco install ninja -y -r --no-progress
      - run: $env:PATH
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run:
          name: vcpkg bootstrap
          command: .\vcpkg\bootstrap-vcpkg.bat
      - restore_cache:
          key: vcpkg-cache-{{ checksum "VCPKG_HASH.txt" }}-{{ .Environment.TRIPLET }}-{{ .Environment.FEATURES }}
      - run:
          name: vcpkg upgrade
          command: .\vcpkg\vcpkg.exe upgrade --no-dry-run
          no_output_timeout: 60m
      - run:
          name: vcpkg install ffmpeg
          command: .\vcpkg\vcpkg.exe install ffmpeg[${env:FEATURES}]:${env:TRIPLET} --recurse
          no_output_timeout: 60m
      - save_cache:
          key: vcpkg-cache-{{ checksum "VCPKG_HASH.txt" }}-{{ .Environment.TRIPLET }}-{{ .Environment.FEATURES }}
          paths:
            - vcpkg/installed
      - run:
          name: vcpkg extract all ffmpeg features
          command: |
            $env:ALL_FEATURES = (((.\vcpkg\vcpkg.exe list | Select-String -Pattern "ffmpeg\[(.*)\]:${env:TRIPLET}\s") -Replace "ffmpeg\[(.*)\]:.*","`$1") + "core") -Join ";"
            $env:ALL_FEATURES
      - run:
          name: test release
          shell: cmd.exe  # vcvars does not work in powershell
          command: |
            call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
            mkdir build-rel
            cd build-rel
            cmake ../test -G Ninja -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_TOOLCHAIN_FILE=../vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=%TRIPLET% -DFEATURES=%ALL_FEATURES% -DCMAKE_MSVC_RUNTIME_LIBRARY=%MSVC_RUNTIME_LIBRARY%
            cmake --build .
            ctest -V
workflows:
  version: 2
  weekly:
    jobs:
      - build
    triggers:
      - schedule:
          cron: "0 0 * * 0"
          filters:
            branches:
              only:
                - master
  manual:
    jobs:
      - hold:
          type: approval
      - build:
          requires:
            - hold
