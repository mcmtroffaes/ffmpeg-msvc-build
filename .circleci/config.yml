aliases:
  - &restore_vcpkg_bootstrap
      key: vcpkg-bootstrap-<< parameters.triplet >>

  - &save_vcpkg_bootstrap
      key: vcpkg-bootstrap-<< parameters.triplet >>
      paths:
        - vcpkg/vcpkg

  - &restore_vcpkg_cache
      key: vcpkg-cache-{{ checksum "VCPKG_HASH.txt" }}-<< parameters.triplet >>-<< parameters.features >>

  - &save_vcpkg_cache
      key: vcpkg-cache-{{ checksum "VCPKG_HASH.txt" }}-<< parameters.triplet >>-<< parameters.features >>
      paths:
        - vcpkg/installed

  - &vcpkg_install
      command: ./vcpkg/vcpkg install ffmpeg[<< parameters.features >>]:<< parameters.triplet >> --recurse
      no_output_timeout: 60m

version: 2.1
orbs:
  win: circleci/windows@2.2.0
jobs:
  build_linux:
    parameters:
      triplet:
        type: string
        default: "x64-linux"
      features:
        type: string
        default: "core,avcodec,avformat,avdevice,avfilter,swresample,swscale,opus,vpx"
    docker:
      - image: cimg/base:stable
    resource_class: small
    environment:
      CMAKE_BUILD_PARALLEL_LEVEL: 1  # to avoid running out of memory
    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install cmake ninja-build nasm
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - restore_cache: *restore_vcpkg_bootstrap
      - run: if test ! -f ./vcpkg/vcpkg; then ./vcpkg/bootstrap-vcpkg.sh -disableMetrics -useSystemBinaries; fi
      - save_cache: *save_vcpkg_bootstrap
      - restore_cache: *restore_vcpkg_cache
      - run: *vcpkg_install
      - save_cache: *save_vcpkg_cache
      - run: ./test.sh /home/circleci/project/vcpkg << parameters.triplet >>
  build_windows:
    parameters:
      triplet:
        type: string
        default: "x64-windows"
      features:
        type: string
        default: "core"
    executor:
      name: win/default
    environment:
      VCPKG_DISABLE_METRICS: 1
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run: ./vcpkg/bootstrap-vcpkg.bat
      - restore_cache: *restore_vcpkg_cache
      - run: *vcpkg_install
      - save_cache: *save_vcpkg_cache
      - run: ./test.bat C:\Users\circleci\project\vcpkg << parameters.triplet >>
workflows:
  version: 2
  weekly:
    jobs:
      - build_linux
      - build_windows
    triggers:
      - schedule:
          cron: "0 0 * * 0"
          filters:
            branches:
              only:
                - master
  manual_windows:
    jobs:
      - hold_windows:
          type: approval
      - build_windows:
          requires:
            - hold_windows
  manual_linux:
    jobs:
      - hold_linux:
          type: approval
      - build_linux:
          requires:
            - hold_linux
