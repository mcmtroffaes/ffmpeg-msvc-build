cmake_minimum_required(VERSION 3.12)

# enable MSVC_RUNTIME_LIBRARY target property
# see https://cmake.org/cmake/help/latest/policy/CMP0091.html
if(POLICY CMP0091)
  cmake_policy(SET CMP0091 NEW)
endif()

project(ffmpeg_test)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(FEATURES "avcodec;avdevice;avformat;avfilter;avisynthplus;avresample;bzip2;ffmpeg;ffplay;ffprobe;ass;dav1d;freetype;iconv;ilbc;lzma;modplug;mp3lame;nvcodec;opencl;opengl;openjpeg;opus;postproc;snappy;soxr;speex;ssh;swresample;tesseract;theora;vorbis;vpx;webp;x264;x265;xml2;zlib" CACHE STRING "List of all features enabled through vcpkg.")
enable_testing()

function(test_for _feature _name)
  if (NOT ${_feature} IN_LIST FEATURES)
    set_tests_properties(${_name} PROPERTIES WILL_FAIL TRUE)
  endif()
endfunction()

add_subdirectory(avutil)
if ("avcodec" IN_LIST FEATURES)
  add_subdirectory(avcodec)
  add_test(NAME test_encoder_aac COMMAND test_find_encoder aac)
  add_test(NAME test_decoder_aac COMMAND test_find_decoder aac)
  add_test(NAME test_encoder_flac COMMAND test_find_encoder flac)
  add_test(NAME test_decoder_flac COMMAND test_find_decoder flac)
  add_test(NAME test_encoder_ffv1 COMMAND test_find_encoder ffv1)
  add_test(NAME test_decoder_ffv1 COMMAND test_find_decoder ffv1)

  add_test(NAME test_decoder_libdav1d COMMAND test_find_decoder libdav1d)
  test_for("dav1d" test_decoder_libdav1d)

  add_test(NAME test_decoder_srt COMMAND test_open_decoder srt)
  add_test(NAME test_decoder_srt_iconv COMMAND test_open_decoder srt sub_charenc=ISO-8859-1)
  test_for("iconv" test_decoder_srt_iconv)

  add_test(NAME test_encoder_libilbc COMMAND test_find_encoder libilbc)
  add_test(NAME test_decoder_libilbc COMMAND test_find_decoder libilbc)
  test_for("ilbc" test_encoder_libilbc)
  test_for("ilbc" test_decoder_libilbc)

  add_test(NAME test_encoder_h264_nvenc COMMAND test_find_encoder h264_nvenc)
  add_test(NAME test_encoder_hevc_nvenc COMMAND test_find_encoder hevc_nvenc)
  test_for("nvcodec" test_encoder_h264_nvenc)
  test_for("nvcodec" test_encoder_hevc_nvenc)

  add_test(NAME test_encoder_hap COMMAND test_find_encoder hap)
  test_for("snappy" test_encoder_hap)
  add_test(NAME test_decoder_hap COMMAND test_find_decoder hap)

  add_test(NAME test_encoder_libmp3lame COMMAND test_find_encoder libmp3lame)
  test_for("mp3lame" test_encoder_libmp3lame)
  add_test(NAME test_decoder_mp3 COMMAND test_find_decoder mp3)

  add_test(NAME test_encoder_mpeg4 COMMAND test_find_encoder mpeg4)
  add_test(NAME test_decoder_mpeg4 COMMAND test_find_decoder mpeg4)

  add_test(NAME test_encoder_opus COMMAND test_find_encoder opus)
  add_test(NAME test_decoder_opus COMMAND test_find_decoder opus)
  test_for("swresample" test_decoder_opus)  # built-in opus decoder needs swresample

  add_test(NAME test_encoder_libopenjpeg COMMAND test_find_encoder libopenjpeg)
  add_test(NAME test_decoder_libopenjpeg COMMAND test_find_decoder libopenjpeg)
  test_for("openjpeg" test_encoder_libopenjpeg)
  test_for("openjpeg" test_decoder_libopenjpeg)

  add_test(NAME test_encoder_libopus COMMAND test_find_encoder libopus)
  add_test(NAME test_decoder_libopus COMMAND test_find_decoder libopus)
  test_for("opus" test_encoder_libopus)
  test_for("opus" test_decoder_libopus)

  add_test(NAME test_encoder_libspeex COMMAND test_find_encoder libspeex)
  add_test(NAME test_decoder_libspeex COMMAND test_find_decoder libspeex)
  test_for("speex" test_encoder_libspeex)
  test_for("speex" test_decoder_libspeex)

  add_test(NAME test_decoder_theora COMMAND test_find_decoder theora)
  add_test(NAME test_encoder_libtheora COMMAND test_find_encoder libtheora)
  test_for("theora" test_encoder_libtheora)

  add_test(NAME test_decoder_vp8 COMMAND test_find_decoder vp8)
  add_test(NAME test_decoder_vp9 COMMAND test_find_decoder vp9)

  add_test(NAME test_encoder_libvorbis COMMAND test_find_encoder libvorbis)
  add_test(NAME test_decoder_libvorbis COMMAND test_find_decoder libvorbis)
  test_for("vorbis" test_encoder_libvorbis)
  test_for("vorbis" test_decoder_libvorbis)

  add_test(NAME test_encoder_libvpx_vp8 COMMAND test_find_encoder libvpx)
  add_test(NAME test_decoder_libvpx_vp8 COMMAND test_find_decoder libvpx)
  add_test(NAME test_encoder_libvpx_vp9 COMMAND test_find_encoder libvpx-vp9)
  add_test(NAME test_decoder_libvpx_vp9 COMMAND test_find_decoder libvpx-vp9)
  test_for("vpx" test_encoder_libvpx_vp8)
  test_for("vpx" test_decoder_libvpx_vp8)
  test_for("vpx" test_encoder_libvpx_vp9)
  test_for("vpx" test_decoder_libvpx_vp9)

  add_test(NAME test_encoder_wavpack COMMAND test_find_encoder wavpack)
  add_test(NAME test_decoder_wavpack COMMAND test_find_decoder wavpack)

  add_test(NAME test_encoder_libwebp COMMAND test_find_encoder libwebp)
  test_for("webp" test_encoder_libwebp)

  add_test(NAME test_encoder_libx264 COMMAND test_find_encoder libx264)
  test_for("x264" test_encoder_libx264)

  add_test(NAME test_encoder_libx265 COMMAND test_find_encoder libx265)
  test_for("x265" test_encoder_libx265)
endif()
if ("avfilter" IN_LIST FEATURES)
  add_subdirectory(avfilter)
  add_test(NAME test_filter_avgblur COMMAND test_find_filter avgblur)

  add_test(NAME test_filter_ass COMMAND test_find_filter ass)
  test_for("ass" test_filter_ass)

  add_test(NAME test_filter_drawtext COMMAND test_find_filter drawtext)
  test_for("freetype" test_filter_drawtext)

  add_test(NAME test_filter_ocr COMMAND test_find_filter ocr)
  test_for("tesseract" test_filter_ocr)

  add_test(NAME test_filter_avgblur_opencl COMMAND test_find_filter avgblur_opencl)
  test_for("opencl" test_filter_avgblur_opencl)
endif()
if ("avformat" IN_LIST FEATURES)
  add_subdirectory(avformat)

  add_test(NAME test_decode_avisynthplus COMMAND test_decode "${CMAKE_CURRENT_SOURCE_DIR}/avisynth.avs" avisynth)
  test_for("avisynthplus" test_decode_avisynthplus)
  add_test(NAME test_decode_bzip2 COMMAND test_decode "${CMAKE_CURRENT_SOURCE_DIR}/subtitle_bzip2.mkv" matroska)
  test_for("bzip2" test_decode_bzip2)
  add_test(NAME test_decode_lzma COMMAND test_decode "${CMAKE_CURRENT_SOURCE_DIR}/tiff_lzma.tif" tiff_pipe)
  test_for("lzma" test_decode_lzma)
  add_test(NAME test_decode_zlib COMMAND test_decode "${CMAKE_CURRENT_SOURCE_DIR}/tiff_zlib.tif" tiff_pipe)
  test_for("zlib" test_decode_zlib)

  add_test(NAME test_format_input_dash  COMMAND test_find_format "input"  "dash")
  add_test(NAME test_format_output_dash COMMAND test_find_format "output" "dash")
  test_for("xml2" test_format_input_dash)
  add_test(NAME test_format_input_libmodplug COMMAND test_find_format "input" "libmodplug")
  test_for("modplug" test_format_input_libmodplug)

  add_test(NAME test_protocol_input_file  COMMAND test_find_protocol "input"  "file")
  add_test(NAME test_protocol_output_file COMMAND test_find_protocol "output" "file")
  add_test(NAME test_protocol_input_sftp  COMMAND test_find_protocol "input"  "sftp")
  add_test(NAME test_protocol_output_sftp COMMAND test_find_protocol "output" "sftp")
  test_for("ssh" test_protocol_input_sftp)
  test_for("ssh" test_protocol_output_sftp)
endif()
if ("postproc" IN_LIST FEATURES)
  add_subdirectory(postproc)
endif()
if ("swresample" IN_LIST FEATURES)
  add_subdirectory(swresample)
  add_test(NAME test_swresample_swr COMMAND test_find_swr_engine swr)
  add_test(NAME test_swresample_soxr COMMAND test_find_swr_engine soxr)
  test_for("soxr" test_swresample_soxr)
endif()
if ("avdevice" IN_LIST FEATURES)
  add_subdirectory(avdevice)
  add_test(NAME test_avdevice_opengl COMMAND test_find_output_video_device opengl)
  test_for("opengl" test_avdevice_opengl)
endif()
if ("avresample" IN_LIST FEATURES)
  add_subdirectory(avresample)
endif()
if ("ffmpeg" IN_LIST FEATURES)
  add_test(NAME test_tools_ffmpeg COMMAND "${_VCPKG_INSTALLED_DIR}/${VCPKG_TARGET_TRIPLET}/tools/ffmpeg/ffmpeg" -h)
endif()
if ("ffplay" IN_LIST FEATURES)
  add_test(NAME test_tools_ffplay COMMAND "${_VCPKG_INSTALLED_DIR}/${VCPKG_TARGET_TRIPLET}/tools/ffmpeg/ffplay" -h)
endif()
if ("ffprobe" IN_LIST FEATURES)
  add_test(NAME test_tools_ffprobe COMMAND "${_VCPKG_INSTALLED_DIR}/${VCPKG_TARGET_TRIPLET}/tools/ffmpeg/ffprobe" -h)
endif()