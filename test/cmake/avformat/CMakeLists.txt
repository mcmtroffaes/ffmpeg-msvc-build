cmake_minimum_required(VERSION 3.12)
set(TYPE cmake)
set(COMPONENT avformat)
set(TEST test_${TYPE}_${COMPONENT})
set(SRC_DIR ../../src/${COMPONENT})
project(${TEST})
find_package(FFMPEG REQUIRED)
add_executable            (${TEST}_decode             ${SRC_DIR}/decode.cpp)
add_executable            (${TEST}_list_all_protocols ${SRC_DIR}/list_all_protocols.cpp)
add_executable            (${TEST}_find_protocol      ${SRC_DIR}/find_protocol.cpp)
add_executable            (${TEST}_list_all_formats   ${SRC_DIR}/list_all_formats.cpp)
add_executable            (${TEST}_find_format        ${SRC_DIR}/find_format.cpp)
target_link_libraries     (${TEST}_decode             PRIVATE ${FFMPEG_LIBRARIES})
target_link_libraries     (${TEST}_list_all_protocols PRIVATE ${FFMPEG_LIBRARIES})
target_link_libraries     (${TEST}_find_protocol      PRIVATE ${FFMPEG_LIBRARIES})
target_link_libraries     (${TEST}_list_all_formats   PRIVATE ${FFMPEG_LIBRARIES})
target_link_libraries     (${TEST}_find_format        PRIVATE ${FFMPEG_LIBRARIES})
target_include_directories(${TEST}_decode             PRIVATE ${FFMPEG_INCLUDE_DIRS})
target_include_directories(${TEST}_list_all_protocols PRIVATE ${FFMPEG_INCLUDE_DIRS})
target_include_directories(${TEST}_find_protocol      PRIVATE ${FFMPEG_INCLUDE_DIRS})
target_include_directories(${TEST}_list_all_formats   PRIVATE ${FFMPEG_INCLUDE_DIRS})
target_include_directories(${TEST}_find_format        PRIVATE ${FFMPEG_INCLUDE_DIRS})
if("avisynthplus" IN_LIST FEATURES)
  add_custom_command(
    TARGET ${TEST}_decode POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy
      "${_VCPKG_INSTALLED_DIR}/${VCPKG_TARGET_TRIPLET}/bin/AviSynth${CMAKE_SHARED_LIBRARY_SUFFIX}"
      $<TARGET_FILE_DIR:${TEST}_decode>)
endif()